{"version":3,"sources":["components/ContactForm.js","firebase.js","components/Contacts.js","App.js","index.js"],"names":["ContactForm","props","initialFieldValues","fullname","mobile","email","address","useState","values","setValues","useEffect","currentId","contactObject","handleInputChange","event","target","name","value","autoComplete","onSubmit","preventDefault","addOrEdit","className","id","type","placeholder","onChange","fireDb","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","Contacts","setContactObject","setCurrentId","firebaseDb","child","on","snapshot","val","obj","push","err","console","log","set","Object","keys","map","index","key","onClick","window","confirm","remove","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAyEeA,EAvEK,SAACC,GACjB,IAAMC,EAAqB,CACvBC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,QAAS,IALc,EAQCC,mBAASL,GARV,mBAQpBM,EARoB,KAQZC,EARY,KAU3BC,qBAAW,WACe,IAAnBT,EAAMU,UACLF,EAAU,eAAIP,IAGdO,EAAU,eAAIR,EAAMW,cAAcX,EAAMU,eAE9C,CAACV,EAAMU,UAAWV,EAAMW,gBAE1B,IAAMC,EAAoB,SAACC,GAAW,IAAD,EACXA,EAAMC,OAArBC,EAD0B,EAC1BA,KAAMC,EADoB,EACpBA,MACbR,EAAU,2BAAID,GAAL,kBAAcQ,EAAOC,MAQlC,OACI,0BAAMC,aAAa,MAAMC,SANN,SAACL,GACpBA,EAAMM,iBACNnB,EAAMoB,UAAUb,KAMZ,yBAAKc,UAAU,uCACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,mBAAmBC,GAAG,kBAAiB,uBAAGD,UAAU,kBAExE,2BAAOE,KAAK,OAAOF,UAAU,eAAeG,YAAY,YAAYT,KAAK,WAAWC,MAAOT,EAAOL,SAAUuB,SAAUb,KAK1H,yBAAKS,UAAU,aACX,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,uBAAGA,UAAU,wBAGrB,2BAAOE,KAAK,OAAOF,UAAU,eAAeG,YAAY,SAAST,KAAK,SAASC,MAAOT,EAAOJ,OAAQsB,SAAUb,KAGnH,yBAAKS,UAAU,mCACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,oBACX,uBAAGA,UAAU,sBAGrB,2BAAOE,KAAK,OAAOF,UAAU,eAAeG,YAAY,QAAQT,KAAK,QAAQC,MAAOT,EAAOH,MAAOqB,SAAUb,MAIpH,yBAAKS,UAAU,0BACX,8BAAWA,UAAU,eAAeG,YAAY,eAAeT,KAAK,UAAUC,MAAOT,EAAOF,QAASoB,SAAUb,KAEnH,yBAAKS,UAAU,eACb,2BAAOE,KAAK,SAASP,MAA0B,IAAnBhB,EAAMU,UAAkB,OAAS,SAAUW,UAAU,iCCnD9EK,E,MAFFC,cAXO,CACpBC,OAAQ,0CACRC,WAAY,oCACZC,YAAa,2CACbC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,8CAMeC,WAAWC,MCiGpBC,EA7GE,WAAO,IAAD,EAEuB/B,mBAAS,IAFhC,mBAEZK,EAFY,KAEG2B,EAFH,OAGehC,mBAAS,IAHxB,mBAGZI,EAHY,KAGD6B,EAHC,KAKnB9B,qBAAU,WACN+B,EAAWC,MAAM,YAAYC,GAAG,SAAS,SAAAC,GACjB,OAAlBA,EAASC,MACXN,EAAiB,eACVK,EAASC,QAGhBN,EAAiB,SAGvB,IA+CF,OACI,oCACI,yBAAKjB,UAAU,6BACf,yBAAKA,UAAU,aACX,wBAAIA,UAAU,yBAAd,sBAIJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,EAAiB,CAACD,UAvDjB,SAACyB,GACC,IAAbnC,EACC8B,EAAWC,MAAM,YAAYK,KACzBD,GACA,SAAAE,GACOA,EACCC,QAAQC,IAAIF,GAEZR,EAAa,OAMzBC,EAAWC,MAAX,mBAA6B/B,IAAawC,IACtCL,GACA,SAAAE,GACOA,EACCC,QAAQC,IAAIF,GAGZR,EAAa,QAkCa7B,YAAWC,mBAG7C,yBAAKU,UAAU,YACX,2BAAOA,UAAU,wCACb,2BAAOA,UAAU,eACb,4BACI,oCACA,sCACA,qCACA,yCAGR,+BAEQ8B,OAAOC,KAAKzC,GAAe0C,KAAI,SAAC/B,EAAIgC,GAChC,OACE,wBAAIC,IAAKD,GACL,4BAAK3C,EAAcW,GAAIpB,UACvB,4BAAKS,EAAcW,GAAInB,QACvB,4BAAKQ,EAAcW,GAAIlB,OACvB,4BACI,uBAAGiB,UAAU,mBAAmBmC,QAAS,WAAKjB,EAAajB,KAAM,uBAAGD,UAAU,uBAC9E,uBAAGA,UAAU,kBAAkBmC,QAAS,WAjDjE,IAACD,IAiDiFjC,EAhD5FmC,OAAOC,QAAQ,yCACdlB,EAAWC,MAAX,mBAA6Bc,IAAOI,QAChC,SAAAZ,GACOA,EACCC,QAAQC,IAAIF,GAGZR,EAAa,SAyCwE,uBAAGlB,UAAU,iCCnF3GuC,MAZf,WACE,OACE,yBAAKvC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,kBAAC,EAAD,UCJVwC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2023db29.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nconst ContactForm = (props) => {\r\n    const initialFieldValues = {\r\n        fullname: '',\r\n        mobile: '',\r\n        email: '',\r\n        address: ''\r\n    }\r\n    \r\n    const [values, setValues] = useState(initialFieldValues);\r\n\r\n    useEffect( () => {\r\n        if(props.currentId == '') {\r\n            setValues({...initialFieldValues})\r\n        }\r\n        else {\r\n            setValues({...props.contactObject[props.currentId]})\r\n        }\r\n    },[props.currentId, props.contactObject])\r\n\r\n    const handleInputChange = (event) => {\r\n        const {name, value} = event.target;\r\n        setValues({...values, [name]: value})\r\n    }\r\n\r\n    const handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n        props.addOrEdit(values)\r\n    }\r\n    \r\n    return (\r\n        <form autoComplete=\"off\" onSubmit={handleOnSubmit}>\r\n\r\n            <div className=\" form-group input-group flex-nowrap\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\" id=\"addon-wrapping\"><i className=\"fas fa-user\"></i></span>\r\n                </div>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Full Name\" name=\"fullname\" value={values.fullname} onChange={handleInputChange}/>                \r\n            </div>  \r\n\r\n\r\n\r\n            <div className=\"form-row \">\r\n                <div className=\"form-group  input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-mobile-alt\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Mobile\" name=\"mobile\" value={values.mobile} onChange={handleInputChange}/>       \r\n                </div>\r\n\r\n                <div className=\"form-group input-group col-md-6\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <i className=\"fas fa-envelope\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Email\" name=\"email\" value={values.email} onChange={handleInputChange}/>                \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group input-group\">\r\n                <textarea  className=\"form-control\" placeholder=\"Full Address\" name=\"address\" value={values.address} onChange={handleInputChange}/>               \r\n            </div>\r\n            <div className=\"form-group \">\r\n              <input type=\"submit\" value={props.currentId == \"\" ? 'Save' : 'Update'} className=\"btn btn-primary btn-block\"/>\r\n            </div> \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ContactForm\r\n","import * as firebase from 'firebase';\r\n\r\n // Firebase configuration\r\n var firebaseConfig = {\r\n  apiKey: \"AIzaSyAxtA-rO_Xjpyx24dWlTb6gCJFPyBNN90o\",\r\n  authDomain: \"contact-app-8fb1d.firebaseapp.com\",\r\n  databaseURL: \"https://contact-app-8fb1d.firebaseio.com\",\r\n  projectId: \"contact-app-8fb1d\",\r\n  storageBucket: \"contact-app-8fb1d.appspot.com\",\r\n  messagingSenderId: \"415372902520\",\r\n  appId: \"1:415372902520:web:d1f989a1bbab5f54bc2d8d\"\r\n};\r\n\r\n  // Initialize Firebase\r\n  let fireDb = firebase.initializeApp(firebaseConfig);\r\n\r\n  export default fireDb.database().ref()","import React, { useEffect, useState } from 'react'\r\nimport ContactForm from './ContactForm'\r\nimport firebaseDb from \"../firebase\";\r\n\r\nconst Contacts = () => {\r\n\r\n    const [contactObject, setContactObject] = useState({})\r\n    const [currentId, setCurrentId] = useState('')\r\n\r\n    useEffect(()=>{\r\n        firebaseDb.child('contacts').on('value', snapshot=>{\r\n           if(snapshot.val()!== null) {\r\n            setContactObject({\r\n                ...snapshot.val()\r\n            })\r\n           }else {\r\n            setContactObject({})\r\n           }\r\n        })\r\n    },[])\r\n\r\n    const addOrEdit = (obj) => {\r\n        if(currentId == '') {\r\n            firebaseDb.child('contacts').push(\r\n                obj,\r\n                err => {\r\n                    if(err){\r\n                        console.log(err)\r\n                    }else {\r\n                        setCurrentId('')\r\n                    }\r\n                    \r\n                }\r\n            )\r\n        }else {\r\n            firebaseDb.child(`contacts/${currentId}`).set(\r\n                obj,\r\n                err => {\r\n                    if(err){\r\n                        console.log(err)\r\n                    }\r\n                    else{\r\n                        setCurrentId('')\r\n                    }\r\n                    \r\n                }\r\n            )           \r\n        }\r\n    }\r\n\r\n    const onDelete = (key) => {\r\n        if(window.confirm('Are you sure to delete this record ?')) {\r\n            firebaseDb.child(`contacts/${key}`).remove(\r\n                err => {\r\n                    if(err){\r\n                        console.log(err)\r\n                    }\r\n                    else{\r\n                        setCurrentId('')\r\n                    }\r\n                    \r\n                }\r\n            )             \r\n        }\r\n    } \r\n\r\n    return (\r\n        <>\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4 text-center\">Contact Register</h1>\r\n            </div>\r\n            </div> \r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                    <ContactForm {...({addOrEdit, currentId, contactObject})} />\r\n                </div>\r\n\r\n                <div className=\"col-md-7\">\r\n                    <table className=\"table table-borderless table-striped\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <td>Name</td>\r\n                                <td>Mobile</td>\r\n                                <td>Email</td>\r\n                                <td>Actions</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                Object.keys(contactObject).map((id, index)=>{\r\n                                    return (\r\n                                      <tr key={index}>\r\n                                          <td>{contactObject[id].fullname}</td>\r\n                                          <td>{contactObject[id].mobile}</td>\r\n                                          <td>{contactObject[id].email}</td>\r\n                                          <td>\r\n                                              <a className=\"btn text-primary\" onClick={()=>{setCurrentId(id)}}><i className=\"fas fa-pencil-alt\"></i></a>\r\n                                              <a className=\"btn text-danger\" onClick={() => { onDelete(id)}}><i className=\"fas fa-trash-alt\"></i></a>\r\n                                        </td>\r\n                                      </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contacts\r\n","import React from 'react';\nimport Contacts from './components/Contacts';\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-10 offset-md-1\">\n          <Contacts/>\n        </div> \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}